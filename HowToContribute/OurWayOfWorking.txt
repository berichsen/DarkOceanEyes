#Our Process:
Read Time: 5 minutes
We work in small iterations with fast feedback. We try to keep problems we are trying to solve very small yet nontrivial,
to prevent getting lost in the details. Each problem solve should take us closer to achieving our epic.

Here are the steps we use to solve a problem.

##Step 1: Write out problem requirements
For the problem specification, the format should be the following:
    Summary of the problem.
    What are the requirements that the solution must have? e.g. cpu must be able to do video processing,
     and navigation simultaneously process.
    Why does this problem need to be solved?
    Why is this the most important problem to solve next?

##Step 2: Write out technical specification
For the technical specification, the format should be the following: (write Not applicable if not relevant)
	How do we solve the problem?
    What are the constraints of the solution?
    What constraints does the solution add? e.g. less power consumption for rest, electromagnetic interference...
	How can we break up the work? Each step of work should be clearly defined?
	What is the financial cost?
	Where will the pieces be sourced?
	What are the risks and how are they mitigated?
	How do we detect if a failure happens and how do we fix it?
	Where should we test this?
	What are the risks (overheating, emi, failure, etc) and how do we mitigate them?
	How much power will this require?
	How do we test if this works? Is anything untestable?

##Step 3: Break up work into tickets to implement
	- a ticket is a unit of work that a person can independently do
	- some tickets may depend on others and that should be specified

##Step 4: Implementation
	- take and post video
	- post results

##Step 5: Feedback
	- We want to make feedback objective and uninterpreted so this can be metrics, and video of the building process
	
##Step 6: Retrospective and Analysis of feedback
	- Analysis of the feedback and results of the experiments
	- things we learned etc